
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEASSIGN BEGIN COLON COMMA DIVIDE DO DOT ELSE END EQ FUNCTION GE GT ID IF LE LPAREN LT MINUS NEQ NUMBER PLUS PROCEDURE PROGRAM RPAREN SEMI THEN TIMES VAR WHILEprogram : PROGRAM ID SEMI declarations BEGIN stmt_list END DOTdeclarations : VAR var_declarations\n                    | emptyvar_declarations : var_declarations var_declaration\n                        | var_declarationvar_declaration : ID_list COLON ID SEMIID_list : ID\n               | ID_list COMMA IDstmt_list : stmt_list stmt\n                 | stmtstmt : ID ASSIGN expr SEMI\n            | block\n            | WHILE expr DO stmt\n            | IF expr THEN stmt ELSE stmt\n            | IF expr THEN stmtblock : BEGIN stmt_list ENDexpr : expr PLUS term\n            | expr MINUS term\n            | expr LT term\n            | expr GT term\n            | expr LE term\n            | expr GE term\n            | expr EQ term\n            | expr NEQ term\n            | termterm : term TIMES factor\n            | term DIVIDE factor\n            | factorfactor : NUMBER\n              | ID\n              | LPAREN expr RPARENempty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,38,],[0,-1,]),'ID':([2,6,8,9,10,14,15,16,17,18,19,20,21,22,23,24,26,32,37,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,66,67,68,],[3,12,13,12,-5,13,13,-10,-12,31,31,-4,34,35,31,13,-9,31,-16,13,31,31,31,31,31,31,31,31,31,31,13,-6,-11,-13,-15,13,-14,]),'SEMI':([3,28,29,30,31,34,36,55,56,57,58,59,60,61,62,63,64,65,],[4,-25,-28,-29,-30,52,53,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-31,]),'VAR':([4,],[6,]),'BEGIN':([4,5,7,8,9,10,14,15,16,17,20,24,26,37,39,51,52,53,54,66,67,68,],[-32,8,-3,14,-2,-5,14,14,-10,-12,-4,14,-9,-16,14,14,-6,-11,-13,-15,14,-14,]),'WHILE':([8,14,15,16,17,24,26,37,39,51,53,54,66,67,68,],[18,18,18,-10,-12,18,-9,-16,18,18,-11,-13,-15,18,-14,]),'IF':([8,14,15,16,17,24,26,37,39,51,53,54,66,67,68,],[19,19,19,-10,-12,19,-9,-16,19,19,-11,-13,-15,19,-14,]),'COLON':([11,12,35,],[21,-7,-8,]),'COMMA':([11,12,35,],[22,-7,-8,]),'ASSIGN':([13,],[23,]),'END':([15,16,17,24,26,37,53,54,66,68,],[25,-10,-12,37,-9,-16,-11,-13,-15,-14,]),'ELSE':([17,37,53,54,66,68,],[-12,-16,-11,-13,67,-14,]),'NUMBER':([18,19,23,32,40,41,42,43,44,45,46,47,48,49,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'LPAREN':([18,19,23,32,40,41,42,43,44,45,46,47,48,49,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'DOT':([25,],[38,]),'DO':([27,28,29,30,31,55,56,57,58,59,60,61,62,63,64,65,],[39,-25,-28,-29,-30,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-31,]),'PLUS':([27,28,29,30,31,33,36,50,55,56,57,58,59,60,61,62,63,64,65,],[40,-25,-28,-29,-30,40,40,40,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-31,]),'MINUS':([27,28,29,30,31,33,36,50,55,56,57,58,59,60,61,62,63,64,65,],[41,-25,-28,-29,-30,41,41,41,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-31,]),'LT':([27,28,29,30,31,33,36,50,55,56,57,58,59,60,61,62,63,64,65,],[42,-25,-28,-29,-30,42,42,42,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-31,]),'GT':([27,28,29,30,31,33,36,50,55,56,57,58,59,60,61,62,63,64,65,],[43,-25,-28,-29,-30,43,43,43,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-31,]),'LE':([27,28,29,30,31,33,36,50,55,56,57,58,59,60,61,62,63,64,65,],[44,-25,-28,-29,-30,44,44,44,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-31,]),'GE':([27,28,29,30,31,33,36,50,55,56,57,58,59,60,61,62,63,64,65,],[45,-25,-28,-29,-30,45,45,45,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-31,]),'EQ':([27,28,29,30,31,33,36,50,55,56,57,58,59,60,61,62,63,64,65,],[46,-25,-28,-29,-30,46,46,46,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-31,]),'NEQ':([27,28,29,30,31,33,36,50,55,56,57,58,59,60,61,62,63,64,65,],[47,-25,-28,-29,-30,47,47,47,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-31,]),'THEN':([28,29,30,31,33,55,56,57,58,59,60,61,62,63,64,65,],[-25,-28,-29,-30,51,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-31,]),'RPAREN':([28,29,30,31,50,55,56,57,58,59,60,61,62,63,64,65,],[-25,-28,-29,-30,65,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-31,]),'TIMES':([28,29,30,31,55,56,57,58,59,60,61,62,63,64,65,],[48,-28,-29,-30,48,48,48,48,48,48,48,48,-26,-27,-31,]),'DIVIDE':([28,29,30,31,55,56,57,58,59,60,61,62,63,64,65,],[49,-28,-29,-30,49,49,49,49,49,49,49,49,-26,-27,-31,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declarations':([4,],[5,]),'empty':([4,],[7,]),'var_declarations':([6,],[9,]),'var_declaration':([6,9,],[10,20,]),'ID_list':([6,9,],[11,11,]),'stmt_list':([8,14,],[15,24,]),'stmt':([8,14,15,24,39,51,67,],[16,16,26,26,54,66,68,]),'block':([8,14,15,24,39,51,67,],[17,17,17,17,17,17,17,]),'expr':([18,19,23,32,],[27,33,36,50,]),'term':([18,19,23,32,40,41,42,43,44,45,46,47,],[28,28,28,28,55,56,57,58,59,60,61,62,]),'factor':([18,19,23,32,40,41,42,43,44,45,46,47,48,49,],[29,29,29,29,29,29,29,29,29,29,29,29,63,64,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMI declarations BEGIN stmt_list END DOT','program',8,'p_program','sintactico.py',83),
  ('declarations -> VAR var_declarations','declarations',2,'p_declarations','sintactico.py',87),
  ('declarations -> empty','declarations',1,'p_declarations','sintactico.py',88),
  ('var_declarations -> var_declarations var_declaration','var_declarations',2,'p_var_declarations','sintactico.py',92),
  ('var_declarations -> var_declaration','var_declarations',1,'p_var_declarations','sintactico.py',93),
  ('var_declaration -> ID_list COLON ID SEMI','var_declaration',4,'p_var_declaration','sintactico.py',100),
  ('ID_list -> ID','ID_list',1,'p_ID_list','sintactico.py',104),
  ('ID_list -> ID_list COMMA ID','ID_list',3,'p_ID_list','sintactico.py',105),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt_list','sintactico.py',112),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','sintactico.py',113),
  ('stmt -> ID ASSIGN expr SEMI','stmt',4,'p_stmt','sintactico.py',120),
  ('stmt -> block','stmt',1,'p_stmt','sintactico.py',121),
  ('stmt -> WHILE expr DO stmt','stmt',4,'p_stmt','sintactico.py',122),
  ('stmt -> IF expr THEN stmt ELSE stmt','stmt',6,'p_stmt','sintactico.py',123),
  ('stmt -> IF expr THEN stmt','stmt',4,'p_stmt','sintactico.py',124),
  ('block -> BEGIN stmt_list END','block',3,'p_block','sintactico.py',138),
  ('expr -> expr PLUS term','expr',3,'p_expr','sintactico.py',142),
  ('expr -> expr MINUS term','expr',3,'p_expr','sintactico.py',143),
  ('expr -> expr LT term','expr',3,'p_expr','sintactico.py',144),
  ('expr -> expr GT term','expr',3,'p_expr','sintactico.py',145),
  ('expr -> expr LE term','expr',3,'p_expr','sintactico.py',146),
  ('expr -> expr GE term','expr',3,'p_expr','sintactico.py',147),
  ('expr -> expr EQ term','expr',3,'p_expr','sintactico.py',148),
  ('expr -> expr NEQ term','expr',3,'p_expr','sintactico.py',149),
  ('expr -> term','expr',1,'p_expr','sintactico.py',150),
  ('term -> term TIMES factor','term',3,'p_term','sintactico.py',157),
  ('term -> term DIVIDE factor','term',3,'p_term','sintactico.py',158),
  ('term -> factor','term',1,'p_term','sintactico.py',159),
  ('factor -> NUMBER','factor',1,'p_factor','sintactico.py',166),
  ('factor -> ID','factor',1,'p_factor','sintactico.py',167),
  ('factor -> LPAREN expr RPAREN','factor',3,'p_factor','sintactico.py',168),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',177),
]
